# This is a basic workflow to help you get started with Actions

name: tests

# Controls when the action will run.
on:
  # # Triggers the workflow on push or pull request events
  # push:
  #   branches:
  #     - 'main'
  # pull_request:
  #   branches:
  #     - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    strategy:
      matrix:
        spec_test:
          - name : black
            toxArg: black
            pyver: 3.9.13
          - name : flake8
            toxArg: flake8
            pyver: 3.9.13
          - name : py39
            toxArg: py39
            pyver: 3.9.13
          - name : py310
            toxArg: py310
            pyver: 3.10.1
          - name : py311
            toxArg: py311
            pyver: 3.11.1
          # - name : py312
          #   toxArg: py312
          #   pyver: 3.12.1

        #python-versions: ['3.8', '3.9', '3.10', '3.11']

        # If we want to specify arguments related to the python version, we can use the following syntax
        # python-versions:
        #   - version: '3.8'
        #     tox-args: 'py38'
        # github action doesn't goes well with windows due to docker support
        # github action doesn't goes well with macos due to `no docker command`
        #os: [ubuntu-20.04, windows-latest, macos-latest]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    # map step outputs to job outputs so they can be share among jobs
    outputs:
      package_version: ${{ steps.variables_step.outputs.package_version }}
      package_name: ${{ steps.variables_step.outputs.package_name }}
      repo_name: ${{ steps.variables_step.outputs.repo_name }}
      repo_owner: ${{ steps.variables_step.outputs.repo_owner }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.spec_test.pyver }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip==24.0
          pip install tox==3.14.0
        # tox-gh-actions

      # declare package_version, repo_owner, repo_name, package_name so you may use it in web hooks.
      - name: Declare variables for convenient use
        id: variables_step
        run: |
          echo "repo_owner=${GITHUB_REPOSITORY%/*}" >> $GITHUB_OUTPUT
          echo "repo_name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT
        shell: bash

      - name: test with tox
        run: tox -e ${{ matrix.spec_test.toxArg }}


      # TODO: make and test documentation
      # - name: build documentation
      #   run: |
      #     poetry install -E dev
      #     poetry run mkdocs build
      #     git config --global user.name Docs deploy
      #     git config --global user.email docs@dummy.bot.com
      #     poetry run mike deploy -p -f --ignore "`poetry version --short`.dev"
      #     poetry run mike set-default -p "`poetry version --short`.dev"
